// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RobotCommands.proto

#ifndef PROTOBUF_RobotCommands_2eproto__INCLUDED
#define PROTOBUF_RobotCommands_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Team.pb.h"
// @@protoc_insertion_point(includes)

namespace llsf_msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RobotCommands_2eproto();
void protobuf_AssignDesc_RobotCommands_2eproto();
void protobuf_ShutdownFile_RobotCommands_2eproto();

class SetRobotMaintenance;

enum SetRobotMaintenance_CompType {
  SetRobotMaintenance_CompType_COMP_ID = 2000,
  SetRobotMaintenance_CompType_MSG_TYPE = 91
};
bool SetRobotMaintenance_CompType_IsValid(int value);
const SetRobotMaintenance_CompType SetRobotMaintenance_CompType_CompType_MIN = SetRobotMaintenance_CompType_MSG_TYPE;
const SetRobotMaintenance_CompType SetRobotMaintenance_CompType_CompType_MAX = SetRobotMaintenance_CompType_COMP_ID;
const int SetRobotMaintenance_CompType_CompType_ARRAYSIZE = SetRobotMaintenance_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetRobotMaintenance_CompType_descriptor();
inline const ::std::string& SetRobotMaintenance_CompType_Name(SetRobotMaintenance_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetRobotMaintenance_CompType_descriptor(), value);
}
inline bool SetRobotMaintenance_CompType_Parse(
    const ::std::string& name, SetRobotMaintenance_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetRobotMaintenance_CompType>(
    SetRobotMaintenance_CompType_descriptor(), name, value);
}
// ===================================================================

class SetRobotMaintenance : public ::google::protobuf::Message {
 public:
  SetRobotMaintenance();
  virtual ~SetRobotMaintenance();
  
  SetRobotMaintenance(const SetRobotMaintenance& from);
  
  inline SetRobotMaintenance& operator=(const SetRobotMaintenance& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetRobotMaintenance& default_instance();
  
  void Swap(SetRobotMaintenance* other);
  
  // implements Message ----------------------------------------------
  
  SetRobotMaintenance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetRobotMaintenance& from);
  void MergeFrom(const SetRobotMaintenance& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef SetRobotMaintenance_CompType CompType;
  static const CompType COMP_ID = SetRobotMaintenance_CompType_COMP_ID;
  static const CompType MSG_TYPE = SetRobotMaintenance_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return SetRobotMaintenance_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    SetRobotMaintenance_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    SetRobotMaintenance_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    SetRobotMaintenance_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return SetRobotMaintenance_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return SetRobotMaintenance_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return SetRobotMaintenance_CompType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required uint32 robot_number = 1;
  inline bool has_robot_number() const;
  inline void clear_robot_number();
  static const int kRobotNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 robot_number() const;
  inline void set_robot_number(::google::protobuf::uint32 value);
  
  // required bool maintenance = 3;
  inline bool has_maintenance() const;
  inline void clear_maintenance();
  static const int kMaintenanceFieldNumber = 3;
  inline bool maintenance() const;
  inline void set_maintenance(bool value);
  
  // required .llsf_msgs.Team team_color = 4;
  inline bool has_team_color() const;
  inline void clear_team_color();
  static const int kTeamColorFieldNumber = 4;
  inline llsf_msgs::Team team_color() const;
  inline void set_team_color(llsf_msgs::Team value);
  
  // @@protoc_insertion_point(class_scope:llsf_msgs.SetRobotMaintenance)
 private:
  inline void set_has_robot_number();
  inline void clear_has_robot_number();
  inline void set_has_maintenance();
  inline void clear_has_maintenance();
  inline void set_has_team_color();
  inline void clear_has_team_color();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 robot_number_;
  bool maintenance_;
  int team_color_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_RobotCommands_2eproto();
  friend void protobuf_AssignDesc_RobotCommands_2eproto();
  friend void protobuf_ShutdownFile_RobotCommands_2eproto();
  
  void InitAsDefaultInstance();
  static SetRobotMaintenance* default_instance_;
};
// ===================================================================


// ===================================================================

// SetRobotMaintenance

// required uint32 robot_number = 1;
inline bool SetRobotMaintenance::has_robot_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetRobotMaintenance::set_has_robot_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetRobotMaintenance::clear_has_robot_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetRobotMaintenance::clear_robot_number() {
  robot_number_ = 0u;
  clear_has_robot_number();
}
inline ::google::protobuf::uint32 SetRobotMaintenance::robot_number() const {
  return robot_number_;
}
inline void SetRobotMaintenance::set_robot_number(::google::protobuf::uint32 value) {
  set_has_robot_number();
  robot_number_ = value;
}

// required bool maintenance = 3;
inline bool SetRobotMaintenance::has_maintenance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetRobotMaintenance::set_has_maintenance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetRobotMaintenance::clear_has_maintenance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetRobotMaintenance::clear_maintenance() {
  maintenance_ = false;
  clear_has_maintenance();
}
inline bool SetRobotMaintenance::maintenance() const {
  return maintenance_;
}
inline void SetRobotMaintenance::set_maintenance(bool value) {
  set_has_maintenance();
  maintenance_ = value;
}

// required .llsf_msgs.Team team_color = 4;
inline bool SetRobotMaintenance::has_team_color() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetRobotMaintenance::set_has_team_color() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetRobotMaintenance::clear_has_team_color() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetRobotMaintenance::clear_team_color() {
  team_color_ = 0;
  clear_has_team_color();
}
inline llsf_msgs::Team SetRobotMaintenance::team_color() const {
  return static_cast< llsf_msgs::Team >(team_color_);
}
inline void SetRobotMaintenance::set_team_color(llsf_msgs::Team value) {
  GOOGLE_DCHECK(llsf_msgs::Team_IsValid(value));
  set_has_team_color();
  team_color_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace llsf_msgs

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::SetRobotMaintenance_CompType>() {
  return ::llsf_msgs::SetRobotMaintenance_CompType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RobotCommands_2eproto__INCLUDED
