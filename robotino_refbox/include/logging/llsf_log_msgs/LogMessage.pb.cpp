// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LogMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace llsf_log_msgs {

namespace {

const ::google::protobuf::Descriptor* LogMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LogMessage_CompType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* LogMessage_LogLevel_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_LogMessage_2eproto() {
  protobuf_AddDesc_LogMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "LogMessage.proto");
  GOOGLE_CHECK(file != NULL);
  LogMessage_descriptor_ = file->message_type(0);
  static const int LogMessage_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMessage, ts_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMessage, ts_nsec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMessage, log_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMessage, component_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMessage, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMessage, is_exception_),
  };
  LogMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LogMessage_descriptor_,
      LogMessage::default_instance_,
      LogMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LogMessage));
  LogMessage_CompType_descriptor_ = LogMessage_descriptor_->enum_type(0);
  LogMessage_LogLevel_descriptor_ = LogMessage_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_LogMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LogMessage_descriptor_, &LogMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_LogMessage_2eproto() {
  delete LogMessage::default_instance_;
  delete LogMessage_reflection_;
}

void protobuf_AddDesc_LogMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020LogMessage.proto\022\rllsf_log_msgs\"\234\002\n\nLo"
    "gMessage\022\016\n\006ts_sec\030\001 \002(\003\022\017\n\007ts_nsec\030\002 \002("
    "\003\0225\n\tlog_level\030\003 \002(\0162\".llsf_log_msgs.Log"
    "Message.LogLevel\022\021\n\tcomponent\030\004 \002(\t\022\017\n\007m"
    "essage\030\005 \002(\t\022\033\n\014is_exception\030\006 \001(\010:\005fals"
    "e\"&\n\010CompType\022\014\n\007COMP_ID\020\323\017\022\014\n\010MSG_TYPE\020"
    "\001\"M\n\010LogLevel\022\014\n\010LL_DEBUG\020\000\022\013\n\007LL_INFO\020\001"
    "\022\013\n\007LL_WARN\020\002\022\014\n\010LL_ERROR\020\004\022\013\n\007LL_NONE\020\010", 320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LogMessage.proto", &protobuf_RegisterTypes);
  LogMessage::default_instance_ = new LogMessage();
  LogMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_LogMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_LogMessage_2eproto {
  StaticDescriptorInitializer_LogMessage_2eproto() {
    protobuf_AddDesc_LogMessage_2eproto();
  }
} static_descriptor_initializer_LogMessage_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* LogMessage_CompType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogMessage_CompType_descriptor_;
}
bool LogMessage_CompType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2003:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const LogMessage_CompType LogMessage::COMP_ID;
const LogMessage_CompType LogMessage::MSG_TYPE;
const LogMessage_CompType LogMessage::CompType_MIN;
const LogMessage_CompType LogMessage::CompType_MAX;
const int LogMessage::CompType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* LogMessage_LogLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogMessage_LogLevel_descriptor_;
}
bool LogMessage_LogLevel_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const LogMessage_LogLevel LogMessage::LL_DEBUG;
const LogMessage_LogLevel LogMessage::LL_INFO;
const LogMessage_LogLevel LogMessage::LL_WARN;
const LogMessage_LogLevel LogMessage::LL_ERROR;
const LogMessage_LogLevel LogMessage::LL_NONE;
const LogMessage_LogLevel LogMessage::LogLevel_MIN;
const LogMessage_LogLevel LogMessage::LogLevel_MAX;
const int LogMessage::LogLevel_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int LogMessage::kTsSecFieldNumber;
const int LogMessage::kTsNsecFieldNumber;
const int LogMessage::kLogLevelFieldNumber;
const int LogMessage::kComponentFieldNumber;
const int LogMessage::kMessageFieldNumber;
const int LogMessage::kIsExceptionFieldNumber;
#endif  // !_MSC_VER

LogMessage::LogMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LogMessage::InitAsDefaultInstance() {
}

LogMessage::LogMessage(const LogMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LogMessage::SharedCtor() {
  _cached_size_ = 0;
  ts_sec_ = GOOGLE_LONGLONG(0);
  ts_nsec_ = GOOGLE_LONGLONG(0);
  log_level_ = 0;
  component_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  is_exception_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogMessage::~LogMessage() {
  SharedDtor();
}

void LogMessage::SharedDtor() {
  if (component_ != &::google::protobuf::internal::kEmptyString) {
    delete component_;
  }
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void LogMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogMessage_descriptor_;
}

const LogMessage& LogMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LogMessage_2eproto();  return *default_instance_;
}

LogMessage* LogMessage::default_instance_ = NULL;

LogMessage* LogMessage::New() const {
  return new LogMessage;
}

void LogMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ts_sec_ = GOOGLE_LONGLONG(0);
    ts_nsec_ = GOOGLE_LONGLONG(0);
    log_level_ = 0;
    if (has_component()) {
      if (component_ != &::google::protobuf::internal::kEmptyString) {
        component_->clear();
      }
    }
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    is_exception_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LogMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ts_sec = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_sec_)));
          set_has_ts_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ts_nsec;
        break;
      }
      
      // required int64 ts_nsec = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ts_nsec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_nsec_)));
          set_has_ts_nsec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_log_level;
        break;
      }
      
      // required .llsf_log_msgs.LogMessage.LogLevel log_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_log_level:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::llsf_log_msgs::LogMessage_LogLevel_IsValid(value)) {
            set_log_level(static_cast< ::llsf_log_msgs::LogMessage_LogLevel >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_component;
        break;
      }
      
      // required string component = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_component()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->component().data(), this->component().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_message;
        break;
      }
      
      // required string message = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_is_exception;
        break;
      }
      
      // optional bool is_exception = 6 [default = false];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_exception:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_exception_)));
          set_has_is_exception();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LogMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 ts_sec = 1;
  if (has_ts_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ts_sec(), output);
  }
  
  // required int64 ts_nsec = 2;
  if (has_ts_nsec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ts_nsec(), output);
  }
  
  // required .llsf_log_msgs.LogMessage.LogLevel log_level = 3;
  if (has_log_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->log_level(), output);
  }
  
  // required string component = 4;
  if (has_component()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->component().data(), this->component().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->component(), output);
  }
  
  // required string message = 5;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->message(), output);
  }
  
  // optional bool is_exception = 6 [default = false];
  if (has_is_exception()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_exception(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LogMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 ts_sec = 1;
  if (has_ts_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ts_sec(), target);
  }
  
  // required int64 ts_nsec = 2;
  if (has_ts_nsec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ts_nsec(), target);
  }
  
  // required .llsf_log_msgs.LogMessage.LogLevel log_level = 3;
  if (has_log_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->log_level(), target);
  }
  
  // required string component = 4;
  if (has_component()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->component().data(), this->component().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->component(), target);
  }
  
  // required string message = 5;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->message(), target);
  }
  
  // optional bool is_exception = 6 [default = false];
  if (has_is_exception()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_exception(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LogMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 ts_sec = 1;
    if (has_ts_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ts_sec());
    }
    
    // required int64 ts_nsec = 2;
    if (has_ts_nsec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ts_nsec());
    }
    
    // required .llsf_log_msgs.LogMessage.LogLevel log_level = 3;
    if (has_log_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->log_level());
    }
    
    // required string component = 4;
    if (has_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->component());
    }
    
    // required string message = 5;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }
    
    // optional bool is_exception = 6 [default = false];
    if (has_is_exception()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LogMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LogMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogMessage::MergeFrom(const LogMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ts_sec()) {
      set_ts_sec(from.ts_sec());
    }
    if (from.has_ts_nsec()) {
      set_ts_nsec(from.ts_nsec());
    }
    if (from.has_log_level()) {
      set_log_level(from.log_level());
    }
    if (from.has_component()) {
      set_component(from.component());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_is_exception()) {
      set_is_exception(from.is_exception());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LogMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogMessage::CopyFrom(const LogMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  return true;
}

void LogMessage::Swap(LogMessage* other) {
  if (other != this) {
    std::swap(ts_sec_, other->ts_sec_);
    std::swap(ts_nsec_, other->ts_nsec_);
    std::swap(log_level_, other->log_level_);
    std::swap(component_, other->component_);
    std::swap(message_, other->message_);
    std::swap(is_exception_, other->is_exception_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LogMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogMessage_descriptor_;
  metadata.reflection = LogMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace llsf_log_msgs

// @@protoc_insertion_point(global_scope)
