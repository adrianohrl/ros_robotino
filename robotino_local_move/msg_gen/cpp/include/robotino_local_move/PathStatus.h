/* Auto-generated by genmsg_cpp for file /home/viki/ros_workspace/robotino-ros-pkg/robotino/robotino_local_move/msg/PathStatus.msg */
#ifndef ROBOTINO_LOCAL_MOVE_MESSAGE_PATHSTATUS_H
#define ROBOTINO_LOCAL_MOVE_MESSAGE_PATHSTATUS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace robotino_local_move
{
template <class ContainerAllocator>
struct PathStatus_ {
  typedef PathStatus_<ContainerAllocator> Type;

  PathStatus_()
  : status(0)
  {
  }

  PathStatus_(const ContainerAllocator& _alloc)
  : status(0)
  {
  }

  typedef uint8_t _status_type;
  uint8_t status;


  typedef boost::shared_ptr< ::robotino_local_move::PathStatus_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robotino_local_move::PathStatus_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct PathStatus
typedef  ::robotino_local_move::PathStatus_<std::allocator<void> > PathStatus;

typedef boost::shared_ptr< ::robotino_local_move::PathStatus> PathStatusPtr;
typedef boost::shared_ptr< ::robotino_local_move::PathStatus const> PathStatusConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::robotino_local_move::PathStatus_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::robotino_local_move::PathStatus_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace robotino_local_move

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::robotino_local_move::PathStatus_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::robotino_local_move::PathStatus_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::robotino_local_move::PathStatus_<ContainerAllocator> > {
  static const char* value() 
  {
    return "284aa12dd9e9e760802ac9f38036ea5e";
  }

  static const char* value(const  ::robotino_local_move::PathStatus_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x284aa12dd9e9e760ULL;
  static const uint64_t static_value2 = 0x802ac9f38036ea5eULL;
};

template<class ContainerAllocator>
struct DataType< ::robotino_local_move::PathStatus_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robotino_local_move/PathStatus";
  }

  static const char* value(const  ::robotino_local_move::PathStatus_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::robotino_local_move::PathStatus_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 status\n\
# 0 -> Aborted\n\
# 1 -> Completed\n\
\n\
";
  }

  static const char* value(const  ::robotino_local_move::PathStatus_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::robotino_local_move::PathStatus_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::robotino_local_move::PathStatus_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.status);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct PathStatus_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::robotino_local_move::PathStatus_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::robotino_local_move::PathStatus_<ContainerAllocator> & v) 
  {
    s << indent << "status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.status);
  }
};


} // namespace message_operations
} // namespace ros

#endif // ROBOTINO_LOCAL_MOVE_MESSAGE_PATHSTATUS_H

