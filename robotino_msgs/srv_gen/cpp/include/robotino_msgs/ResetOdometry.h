/* Auto-generated by genmsg_cpp for file /home/viki/ros_workspace/robotino-ros-pkg/robotino/robotino_msgs/srv/ResetOdometry.srv */
#ifndef ROBOTINO_MSGS_SERVICE_RESETODOMETRY_H
#define ROBOTINO_MSGS_SERVICE_RESETODOMETRY_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace robotino_msgs
{
template <class ContainerAllocator>
struct ResetOdometryRequest_ {
  typedef ResetOdometryRequest_<ContainerAllocator> Type;

  ResetOdometryRequest_()
  : x(0.0)
  , y(0.0)
  , phi(0.0)
  {
  }

  ResetOdometryRequest_(const ContainerAllocator& _alloc)
  : x(0.0)
  , y(0.0)
  , phi(0.0)
  {
  }

  typedef float _x_type;
  float x;

  typedef float _y_type;
  float y;

  typedef float _phi_type;
  float phi;


  typedef boost::shared_ptr< ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct ResetOdometryRequest
typedef  ::robotino_msgs::ResetOdometryRequest_<std::allocator<void> > ResetOdometryRequest;

typedef boost::shared_ptr< ::robotino_msgs::ResetOdometryRequest> ResetOdometryRequestPtr;
typedef boost::shared_ptr< ::robotino_msgs::ResetOdometryRequest const> ResetOdometryRequestConstPtr;


template <class ContainerAllocator>
struct ResetOdometryResponse_ {
  typedef ResetOdometryResponse_<ContainerAllocator> Type;

  ResetOdometryResponse_()
  {
  }

  ResetOdometryResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct ResetOdometryResponse
typedef  ::robotino_msgs::ResetOdometryResponse_<std::allocator<void> > ResetOdometryResponse;

typedef boost::shared_ptr< ::robotino_msgs::ResetOdometryResponse> ResetOdometryResponsePtr;
typedef boost::shared_ptr< ::robotino_msgs::ResetOdometryResponse const> ResetOdometryResponseConstPtr;

struct ResetOdometry
{

typedef ResetOdometryRequest Request;
typedef ResetOdometryResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct ResetOdometry
} // namespace robotino_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "400210218ff66e5bce9e5be16653c0c8";
  }

  static const char* value(const  ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x400210218ff66e5bULL;
  static const uint64_t static_value2 = 0xce9e5be16653c0c8ULL;
};

template<class ContainerAllocator>
struct DataType< ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robotino_msgs/ResetOdometryRequest";
  }

  static const char* value(const  ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 x\n\
float32 y\n\
float32 phi\n\
\n\
";
  }

  static const char* value(const  ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robotino_msgs/ResetOdometryResponse";
  }

  static const char* value(const  ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::robotino_msgs::ResetOdometryRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.x);
    stream.next(m.y);
    stream.next(m.phi);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ResetOdometryRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::robotino_msgs::ResetOdometryResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ResetOdometryResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<robotino_msgs::ResetOdometry> {
  static const char* value() 
  {
    return "400210218ff66e5bce9e5be16653c0c8";
  }

  static const char* value(const robotino_msgs::ResetOdometry&) { return value(); } 
};

template<>
struct DataType<robotino_msgs::ResetOdometry> {
  static const char* value() 
  {
    return "robotino_msgs/ResetOdometry";
  }

  static const char* value(const robotino_msgs::ResetOdometry&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<robotino_msgs::ResetOdometryRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "400210218ff66e5bce9e5be16653c0c8";
  }

  static const char* value(const robotino_msgs::ResetOdometryRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<robotino_msgs::ResetOdometryRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robotino_msgs/ResetOdometry";
  }

  static const char* value(const robotino_msgs::ResetOdometryRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<robotino_msgs::ResetOdometryResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "400210218ff66e5bce9e5be16653c0c8";
  }

  static const char* value(const robotino_msgs::ResetOdometryResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<robotino_msgs::ResetOdometryResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robotino_msgs/ResetOdometry";
  }

  static const char* value(const robotino_msgs::ResetOdometryResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ROBOTINO_MSGS_SERVICE_RESETODOMETRY_H

